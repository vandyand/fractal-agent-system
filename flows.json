[
  {
    "id": "email_processing_tab",
    "type": "tab",
    "label": "Email Processing System",
    "disabled": false,
    "info": "AI-powered email processing with Node-RED"
  },
  {
    "id": "email_in_node",
    "type": "email in",
    "z": "email_processing_tab",
    "name": "Gmail Receiver",
    "server": "imap.gmail.com",
    "port": "993",
    "tls": true,
    "tlsOptions": {},
    "autotls": "never",
    "username": "pragmagen@gmail.com",
    "password": "",
    "passwordType": "str",
    "keepalive": "keepalive",
    "poll": 30,
    "pollInterval": 30,
    "pollIntervalUnits": "seconds",
    "filter": "is:unread -label:\"Processed by Node-RED\"",
    "markSeen": false,
    "markRead": false,
    "delete": false,
    "deleteAfter": 0,
    "x": 150,
    "y": 100,
    "wires": [["email_processor"]]
  },
  {
    "id": "email_processor",
    "type": "function",
    "z": "email_processing_tab",
    "name": "Process Email",
    "func": "// Process incoming email and generate AI response\nconst email = msg.payload;\n\n// Log the email\nconsole.log('ðŸ“§ Email received:', email.subject, 'from:', email.from);\n\n// Create a simple response for now\nconst response = {\n    to: email.from,\n    subject: `Re: ${email.subject}`,\n    text: `Hi there!\\n\\nThanks for your email about \"${email.subject}\". This is an automated response from our AI-powered email system.\\n\\nWe'll get back to you soon!\\n\\nBest regards,\\nPragmaGen Systems`,\n    html: `<p>Hi there!</p><p>Thanks for your email about \"${email.subject}\". This is an automated response from our AI-powered email system.</p><p>We'll get back to you soon!</p><p>Best regards,<br>PragmaGen Systems</p>`\n};\n\nmsg.payload = response;\nmsg.emailData = email;\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 100,
    "wires": [["email_sender"]]
  },
  {
    "id": "email_sender",
    "type": "email out",
    "z": "email_processing_tab",
    "name": "Send Response",
    "server": "smtp.gmail.com",
    "port": "587",
    "secure": false,
    "tls": true,
    "autotls": true,
    "username": "pragmagen@gmail.com",
    "password": "",
    "passwordType": "str",
    "from": "pragmagen@gmail.com",
    "to": "",
    "cc": "",
    "bcc": "",
    "subject": "",
    "text": "",
    "html": "",
    "x": 550,
    "y": 100,
    "wires": [["email_logger"]]
  },
  {
    "id": "email_logger",
    "type": "file",
    "z": "email_processing_tab",
    "name": "Log Email Response",
    "filename": "/data/email_responses.log",
    "appendNewline": true,
    "createDir": false,
    "overwriteFile": "false",
    "encoding": "none",
    "x": 750,
    "y": 100,
    "wires": []
  },
  {
    "id": "health_check_tab",
    "type": "tab",
    "label": "System Health",
    "disabled": false,
    "info": "System monitoring and health checks"
  },
  {
    "id": "health_check",
    "type": "http in",
    "z": "health_check_tab",
    "name": "Health Check",
    "url": "/health",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 150,
    "y": 100,
    "wires": [["health_response"]]
  },
  {
    "id": "health_response",
    "type": "http response",
    "z": "health_check_tab",
    "name": "Health Response",
    "statusCode": "200",
    "headers": {},
    "x": 350,
    "y": 100,
    "wires": []
  },
  {
    "id": "status_generator",
    "type": "function",
    "z": "health_check_tab",
    "name": "Generate Status",
    "func": "msg.payload = {\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    service: 'fractal-agent-system',\n    version: '1.0.0',\n    uptime: process.uptime(),\n    environment: process.env.NODE_ENV || 'production',\n    railway: true\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 250,
    "y": 100,
    "wires": [["health_response"]]
  }
]
