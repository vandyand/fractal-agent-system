[
  {
    "id": "email_processing_tab",
    "type": "tab",
    "label": "Email Processing System",
    "disabled": false,
    "info": "AI-powered email processing with Node-RED"
  },
  {
    "id": "email_poll_trigger",
    "type": "inject",
    "z": "email_processing_tab",
    "name": "Poll Emails Every 30s",
    "props": [
      {
        "p": "payload"
      }
    ],
    "repeat": "30",
    "crontab": "",
    "once": false,
    "onceDelay": 0.1,
    "topic": "",
    "payload": "poll",
    "payloadType": "str",
    "x": 150,
    "y": 100,
    "wires": [["email_processor"]]
  },
  {
    "id": "email_processor",
    "type": "function",
    "z": "email_processing_tab",
    "name": "Process Emails",
    "func": "// Process emails using our existing email system\nconst { LocalEmailTest } = require('./local_email_test.js');\n\n// Initialize email system\nconst emailSystem = new LocalEmailTest();\n\n// Process emails\nemailSystem.init().then(() => {\n    return emailSystem.checkForNewEmails();\n}).then((result) => {\n    console.log('Email processing result:', result);\n    msg.payload = result;\n    node.send(msg);\n}).catch((error) => {\n    console.error('Email processing error:', error);\n    msg.payload = { error: error.message };\n    node.send(msg);\n});\n\nreturn null;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 100,
    "wires": [["email_logger"]]
  },
  {
    "id": "email_logger",
    "type": "file",
    "z": "email_processing_tab",
    "name": "Log Email Activity",
    "filename": "/data/email_activity.log",
    "appendNewline": true,
    "createDir": false,
    "overwriteFile": "false",
    "encoding": "none",
    "x": 550,
    "y": 100,
    "wires": []
  },
  {
    "id": "manual_email_trigger",
    "type": "http in",
    "z": "email_processing_tab",
    "name": "Manual Email Check",
    "url": "/check-emails",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 150,
    "y": 200,
    "wires": [["email_processor"]]
  },
  {
    "id": "health_check_tab",
    "type": "tab",
    "label": "System Health",
    "disabled": false,
    "info": "System monitoring and health checks"
  },
  {
    "id": "health_check",
    "type": "http in",
    "z": "health_check_tab",
    "name": "Health Check",
    "url": "/health",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 150,
    "y": 100,
    "wires": [["status_generator"]]
  },
  {
    "id": "status_generator",
    "type": "function",
    "z": "health_check_tab",
    "name": "Generate Status",
    "func": "msg.payload = {\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    service: 'fractal-agent-system',\n    version: '1.0.0',\n    uptime: process.uptime(),\n    environment: process.env.NODE_ENV || 'production',\n    railway: true,\n    email_system: 'active'\n};\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 350,
    "y": 100,
    "wires": [["health_response"]]
  },
  {
    "id": "health_response",
    "type": "http response",
    "z": "health_check_tab",
    "name": "Health Response",
    "statusCode": "200",
    "headers": {},
    "x": 550,
    "y": 100,
    "wires": []
  }
]
